%tr
  %td.span7
    %span.time{:class => if session.end_at < Time.zone.now then "past" end}
      = session.time_str

    .room
      =truncate(session.location.name, :length => 30) if session.location

    .participants
      - surplus = session.session_participations.count - session.needed

      - css_class = if surplus < 0 then |
          "participants-red"            |
        elsif surplus < session.reserve then  |
          "participants-yellow"         |
        else                            |
          "participants-green"          |
        end                             |

      = link_to "#{t('.participants_label')} #{session.session_participations.count} (#{session.needed},#{session.reserve})#{", #{t('.group_size')} "+session.group_size.to_s if session.group_size}", participants_experiment_session_path(@experiment, session), :class => css_class

      - if session.end_at < Time.zone.now then
        - if session.session_participations.where('showup=0 AND participated=0 AND noshow=0').count > 0
          %span.session-warning
            =t '.incomplete'

  %td.span5
    .btn-group
      - if current_user.has_right?(@experiment, 'manage_sessions')
        = link_to t(:edit), edit_experiment_session_path(@experiment, session), :class => 'btn btn-primary'
        = link_to t('.participants_link'), participants_experiment_session_path(@experiment, session), :class => 'btn btn-default'


    - if current_user.has_right?(@experiment, 'manage_sessions')
      .btn-group
        %a.btn.btn-default.dropdown-toggle{:'data-toggle' => "dropdown", :href => "#"}
          =t '.actions'
          %b.caret
        %ul.dropdown-menu
          - if session.session_group_id == nil
            - if session.session_participations.count == 0
              - @ungrouped_sessions.reject{|s| s.id == session.id}.each do |s|
                - if s.has_no_participants?
                  %li= link_to t('.group_this_session', :session => s.time_str), create_group_with_experiment_session_path(@experiment, session, :target => s.id), :method => :post
                - @experiment.session_groups.each_with_index do |group, i|
                  %li= link_to t('.add_to_group', :id => i+1), add_to_group_experiment_session_path(@experiment, session, :target => group.id), :method => :post
          - else
            %li= link_to t('.remove_from_group'), remove_from_group_experiment_session_path(@experiment, session), :method => :post

          %li= link_to t('.duplicate'), duplicate_experiment_session_path(@experiment, session)
          %li= link_to t('.delete'), experiment_session_path(@experiment, session), :method => :delete, :confirm => t('.delete_confirm')
