= content_for :breadcrumb do
  %ul.breadcrumb
    %li
      =link_to t(:administration), :controller => "admin", :action => "index"
      %span.divider
        &gt;
    %li.active
      =t 'dashboard'


%h1=t 'dashboard'
%br

- if @today_sessions.count > 0  
  .well
    %h3=t '.sessions_today' 
    %table.table
      %tbody
        - @today_sessions.each do |s|
          %tr
            %td= link_to s.only_time_str, participants_experiment_session_path(s.experiment, s)
            %td
              = link_to s.experiment.name, experiment_sessions_path(s.experiment)
              
              - if s.location
                %br
                = s.location.name
              %br
              = s.session_participations.count
              =t '.participants'

.row
  .span6
    .well
      %h3=t '.latest_experiments'
      
      - if @latest_experiments.count > 0
        %table.table
          %tbody
            - @latest_experiments.each do |e|
              %tr
                %td= link_to e.name, experiment_sessions_path(e)
      - else
        =t '.no_experiments'
                
  - if current_user.admin?
    .span4
      .well
        %h3=t '.statistic'
        =t '.active_members'
        = User.where("role='user'").where('deleted=0').count
        %br
        =t '.new_members_last_30_days'
        = User.where('DATE(confirmed_at) >= DATE_SUB(DATE(NOW()), INTERVAL 30 DAY)').where("role='user'").where('deleted=0').count

- if @incomplete_sessions.count > 0
  .well
    %h3=t '.incomplete_sessions'
    %table.table
      %tbody
        - @incomplete_sessions.each do |s|
          %tr
            %td= link_to s.time_str, participants_experiment_session_path(s.experiment, s)
            %td
              = link_to s.experiment.name, experiment_sessions_path(s.experiment)
              %br
            %td
              - u = s.experiment.experimenters.all
              = u.collect{|x| "#{x.firstname} #{x.lastname}"}.join(', ')
            %td
              =t '.missing1'
              = s.session_participations.where("showup=0 AND participated=0 AND noshow=0").count
              =t '.missing2'

