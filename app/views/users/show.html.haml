= content_for :breadcrumb do
  = render :partial => "layouts/crumb", :object => [                    |
      link_to(t('administration'), :controller => "admin", :action => "index"), |
      link_to(t(:user), users_path),                                    |
      link_to(@user.firstname+' '+@user.lastname, user_path(@user)) ]

  
.btn-group{:style => "float:right"}
  %a.btn.dropdown-toggle{:'data-toggle' => "dropdown", :href => "#"}
    =t '.more_functions'
    %b.caret 
  %ul.dropdown-menu
    %li= link_to t('.login_as', :user => "#{@user.firstname} #{@user.lastname}"), login_as_user_path(@user)
    - if @user.imported && !@user.activated_after_import  
      %li= link_to t('.activate_user_after_import'), activate_after_import_user_path(@user)
        
.edit_button{:style => "float: right"}
  = link_to t(:edit), edit_user_path(@user), :class => "btn btn-primary"
    
%h1
  = @user.firstname+' '+@user.lastname
  
- if @user.imported && !@user.activated_after_import  
  %span.label.label-important
    =t '.not_activated'
  &nbsp;
  
- if @user.deleted
  %span.label.label-important
    =t '.marked_as_deleted'

%br

.some
  .row
    .span5
      %h4= t('.general')
      %table.table
        %thead
          %tr
            %td= t('activerecord.attributes.user.firstname')
            %td= @user.firstname
        %tbody
          %tr
            %td= t('activerecord.attributes.user.lastname')
            %td= @user.lastname
          %tr
            %td= t('activerecord.attributes.user.role')
            %td= @user.rolename
      
    .span5
      %h4= t('.account')
      %table.table
        %thead
          %tr
            %td= t('activerecord.attributes.user.email')
            %td= link_to @user.email, "mailto:#{@user.email}"
        %tbody
          %tr
            %td= t('activerecord.attributes.user.secondary_email')
            %td= link_to @user.secondary_email, "mailto:#{@user.secondary_email}" unless @user.secondary_email.blank?
      

  .row
    .span5
      %h4= t('.required_fields')
      %table.table
        %tbody
          - Datafields.required.each do |field|
            %tr
              %td= t("activerecord.attributes.user.#{field.name}")
              %td= field.display_value(@user)
              
    .span5  
      %h4= t('.optional_fields')
      %table.table
        %tbody
          - Datafields.optional.each do |field|
            %tr
              %td= t("activerecord.attributes.user.#{field.name}")
              %td= field.display_value(@user)


  %br

.userinfo
  - ptable = {}; @user.session_participations.each do |sp| ptable[sp.session_id] = sp end
  - participations = @user.session_participations.includes(:session).where('sessions.id=sessions.reference_session_id').order("sessions.start_at")
  
  - if participations.count > 0

    %h4=t '.participations_so_far'
    %br
    %br
  
    %table.table
      %tbody  
        - participations.each do |sp|
          %tr
            %td
              = truncate(sp.session.experiment.name, :length => 60)
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                = link_to s.time_str, participants_experiment_session_path(s.experiment, s)
                %br
            %td
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                - if ptable[s.id] && ptable[s.id].showup
                  %span.label.label-success
                    =t '.showup'
                - if ptable[s.id] && ptable[s.id].noshow
                  %span.label.label-important
                    =t '.noshow'
                %br
            %td
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                - if ptable[s.id] && ptable[s.id].participated
                  %span.label.label-success
                    =t '.participated'
                %br
            %td
              %br
              = link_to t('.remove_from_session'), remove_from_session_user_path(:session_id => sp.session.id), :class => 'btn', :confirm => t('.remove_from_session_confirm')
