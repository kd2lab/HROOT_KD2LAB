= content_for :breadcrumb do
  = render :partial => "layouts/crumb", :object => [                    |
      link_to(t('administration'), :controller => "admin", :action => "index"), |
      link_to(t(:user), users_path),                                    |
      link_to(@user.firstname+' '+@user.lastname, user_path(@user)) ]

  
.btn-group{:style => "float:right"}
  %a.btn.dropdown-toggle{:'data-toggle' => "dropdown", :href => "#"}
    =t '.more_functions'
    %b.caret 
  %ul.dropdown-menu
    %li= link_to t('.login_as', :user => "#{@user.firstname} #{@user.lastname}"), login_as_user_path(@user)
    - if @user.imported && !@user.activated_after_import  
      %li= link_to t('.activate_user_after_import'), activate_after_import_user_path(@user)
        
.edit_button{:style => "float: right"}
  = link_to t(:edit), edit_user_path(@user), :class => "btn btn-primary"
    
%h1
  = @user.firstname+' '+@user.lastname
  
- if @user.imported && !@user.activated_after_import  
  %span.label.label-important
    =t '.not_activated'
  &nbsp;
  
- if @user.deleted
  %span.label.label-important
    =t '.marked_as_deleted'

%br


%table.table
  %thead
    %tr
      %td=t '.phone'
      %td= @user.phone
  %tbody
    %tr
      %td=t '.gender'
      %td= {'m' => t('form_values.male'), 'f' => t('form_values.female'), '?' => t(:no_info)}[@user.gender]
  
    %tr
      %td=t '.matrikel'
      %td= @user.matrikel
    %tr
      %td=t :email
      %td= link_to @user.email, "mailto:#{@user.email}"
    %tr
      %td=t '.secondary_email'
      %td
        = link_to @user.secondary_email, "mailto:#{@user.secondary_email}" unless @user.secondary_email.blank?
    %tr
      %td=t '.role'
      %td= User.roles.invert[@user.role]
    %tr
      %td=t '.study'
      %td= @user.study.name if @user.study
    %tr
      %td=t '.degree'
      %td= @user.degree.name if @user.degree  
    
    %tr
      %td=t '.begin'
      %td
        = "#{@user.begin_month}/#{@user.begin_year}" if @user.begin_month && @user.begin_year
    %tr
      %td=t '.country'
      %td= @user.country_name
    %tr
      %td=t '.languages'
      %td= @user.languages.join(',')
    %tr
      %td=t '.profession'
      %td=  @user.profession.name if @user.profession

    = render :partial => 'show_custom_fields'
  %br

.userinfo
  - ptable = {}; @user.session_participations.each do |sp| ptable[sp.session_id] = sp end
  - participations = @user.session_participations.includes(:session).where('sessions.id=sessions.reference_session_id').order("sessions.start_at")
  
  - if participations.count > 0

    =t '.participations_so_far'
    %br
    %br
  
    %table.table
      %tbody  
        - participations.each do |sp|
          %tr
            %td
              = truncate(sp.session.experiment.name, :length => 60)
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                = link_to s.time_str, participants_experiment_session_path(s.experiment, s)
                %br
            %td
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                - if ptable[s.id] && ptable[s.id].showup
                  %span.label.label-success
                    =t '.showup'
                - if ptable[s.id] && ptable[s.id].noshow
                  %span.label.label-important
                    =t '.noshow'
                %br
            %td
              %br
              - ([sp.session] + sp.session.following_sessions).each do |s|
                - if ptable[s.id] && ptable[s.id].participated
                  %span.label.label-success
                    =t '.participated'
                %br
            %td
              %br
              = link_to t('.remove_from_session'), remove_from_session_user_path(:session_id => sp.session.id), :class => 'btn', :confirm => t('.remove_from_session_confirm')
